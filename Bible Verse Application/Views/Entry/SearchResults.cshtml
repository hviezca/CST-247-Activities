@model System.Web.Mvc.FormCollection

<div>
    <h4>Search Results</h4>
    <hr />
    <dl class="dl-horizontal">
    </dl>
</div>
@using (Html.BeginForm("Create", "Entry", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m[1], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m[1]., new SelectList(new[] { new KeyValuePair<string, int>("Old", 0), new KeyValuePair<string, int>("New", 1) }, "Value", "Key")
               , "Select Testament", htmlAttributes: new { @class = "form-control" })


                @Html.ValidationMessageFor(m => m[1], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m[2], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m[2], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[2], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m[3], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m[3], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[3], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m[4], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m[4], new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[4], "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.Item3.VerseText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(tuple => tuple.Item3.VerseText, htmlAttributes: new { @class = "form-control", @style = "height: 100px" })
                @Html.ValidationMessageFor(tuple => tuple.Item3.VerseText, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>











@*BibleVerse bv = new BibleVerse();
    bv.Book.Testament = new Book(  { Testament = Convert.ToInt32(collection[1]) }  );
    bv.Book.BookName = collection[2];
    bv.Chapter.ChapterNumber = Convert.ToInt32(collection[3]);
    bv.Verse.VerseNumber = Convert.ToInt32(collection[4]);*@